name: "Run Test Suite"

on:
  push:
    paths:
      - '**.php'
      - '.github/workflows/run-test-suite.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.4, 8.3, 8.2]
        laravel: [12.*, 11.*, 10.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 12.*
            testbench: 10.*
          - laravel: 11.*
            testbench: 9.*
          - laravel: 10.*
            testbench: 8.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ matrix.php }}-${{ matrix.laravel }}-${{ matrix.stability }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-${{ matrix.php }}-${{ matrix.laravel }}-${{ matrix.stability }}-

      - name: Validate Composer dependencies
        run: composer validate --strict

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.os == 'windows-latest' && '^^^' || '' }}${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Copy phpunit.xml.dist to phpunit.xml
        run: cp phpunit.xml.dist phpunit.xml || echo "phpunit.xml.dist not found, skipping."

      - name: Set environment variables for PHPUnit
        env:
          SIASN_MODE: ${{ secrets.SIASN_MODE }}
          SIASN_APIM_USERNAME: ${{ secrets.SIASN_APIM_USERNAME }}
          SIASN_APIM_PASSWORD: ${{ secrets.SIASN_APIM_PASSWORD }}
          SIASN_SSO_CLIENT_ID: ${{ secrets.SIASN_SSO_CLIENT_ID }}
          SIASN_SSO_USERNAME: ${{ secrets.SIASN_SSO_USERNAME }}
          SIASN_SSO_PASSWORD: ${{ secrets.SIASN_SSO_PASSWORD }}
          SIASN_CONST_INSTANSI_ID: ${{ secrets.SIASN_CONST_INSTANSI_ID }}
          SIASN_CONST_SATUAN_KERJA_ID: ${{ secrets.SIASN_CONST_SATUAN_KERJA_ID }}
        run: |
          echo "Setting environment variables for PHPUnit"
          printenv | grep SIASN

      - name: Execute tests
        run: vendor/bin/pest --ci
        continue-on-error: true

      - name: Notify on Failure
        if: failure()
        run: echo "Some tests failed. Please check the logs."
